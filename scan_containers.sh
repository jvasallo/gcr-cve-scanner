#!/bin/bash

IMAGES=$(kubectl get pods --all-namespaces -o jsonpath="{.items[*].spec.containers[*].image}" | tr -s '[[:space:]]' '\n' | sort | uniq -c | awk '{print $2}')
CVE_LIST=($(cat CVEList.txt))
ORG_GCR_PROJECT=$(cat ORG_GCR_PROJECT.txt)

echo "image,report,cve,status" >> vulnreport.csv
for image in $IMAGES
do
    if [[ "$image" =~ .*"gcr.io/$ORG_GCR_PROJECT".* ]]; then
        printf -- "-------------------\n"
        printf "Scanning Image: $image\n"
        gcr_scan_id=$(gcloud artifacts docker images scan $image --additional-package-types=MAVEN --remote --format=json | jq -r '.response.scan')
        printf "Scan Report: $gcr_scan_id\n"

        for cve in "${CVE_LIST[@]}"
        do
            if [[ -n $gcr_scan_id ]]; then
                scan_result=$(gcloud artifacts docker images list-vulnerabilities $gcr_scan_id | grep "shortDescription: $cve")

                if [[ -n $scan_result ]]; then
                    printf "ERROR: $cve Detected! Check vulnerability report for full results!\n"
                    echo "$image,$gcr_scan_id,$cve,FAIL" >> vulnreport.csv
                else
                    printf "OK: $cve Not detected.\n"
                    echo "$image,$gcr_scan_id,$cve,PASS" >> vulnreport.csv
                fi
            else
                printf "WARNING: Unable to check for $cve. (Extraction failed: failed to parse packages)\n"
                echo "$image,None,$cve,N/A" >> vulnreport.csv
            fi
        done
        printf -- "-------------------\n"
    fi
done

